# Archivos compilados por bytes / optimizados / DLL
__pycache__ /
* .py [ bacalao ]
* $py.clase

# Extensiones C
* .así

# Distribución / embalaje
.Pitón
construir /
desarrollar-huevos /
dist /
descargas /
huevos /
.huevos /
libre /
lib64 /
partes /
dist /
var /
ruedas /
compartir / ruedas de pitón /
* .huevo-info /
.instalado.cfg
* .huevo
MANIFIESTO

# PyInstaller
#   Por lo general, estos archivos están escritos por un script de python a partir de una plantilla
#   antes de que PyInstaller construya el exe, para inyectarle fecha/otra información.
* .manifiesto
* .spec

# Registros del instalador
pip-log.txt
pip-eliminar-este-directorio.txt

# Pruebas unitarias / informes de cobertura
htmlcov /
.tox /
.nox /
.cobertura
.cobertura. *
.cache
nosetests.xml
cobertura.xml
* .portada
* .py, portada
.hipótesis /
.pytest_cache /
cubrir /

# Traducciones
* .mo
* .olla

# Cosas de Django:
* .registro
configuración_local.py
db.sqlite3
db.sqlite3-journal

# Cosas del matraz:
instancia /
.webassets-cache

# Cosas chatarra:
.scrapy

# documentación de la esfinge
documentos / _build /

# PyBuilder
.pybuilder /
objetivo /

#Cuaderno Jupyter
.ipynb_puntos de control

#IPython _
perfil_predeterminado /
ipython_config.py

#pyenv _
#    Para una biblioteca o paquete, es posible que desee ignorar estos archivos ya que el código es
#    destinado a ejecutarse en múltiples entornos; de lo contrario, consúltalos en:
# .python-versión

# pipenv
#    De acuerdo con pypa/pipenv#598, se recomienda incluir Pipfile.lock en el control de versiones.
#    Sin embargo, en caso de colaboración, si tiene dependencias específicas de la plataforma o dependencias
#    al no tener soporte multiplataforma, pipenv puede instalar dependencias que no funcionan, o no
#    instalar todas las dependencias necesarias.
# Pipfile.lock

#poesia _
#    Similar a Pipfile.lock, generalmente se recomienda incluir poetic.lock en el control de versiones.
#    Esto se recomienda especialmente para paquetes binarios para garantizar la reproducibilidad, y es más
#    comúnmente ignorado por las bibliotecas.
#    https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
# poesia.lock

#pm _
#    Similar a Pipfile.lock, generalmente se recomienda incluir pdm.lock en el control de versiones.
# pdm.bloquear
#    pdm almacena configuraciones de todo el proyecto en .pdm.toml, pero se recomienda no incluirlo
#    en el control de versiones.
#    https://pdm.fming.dev/#usar-con-ide
.pdm.toml

#PEP 582; utilizado por, por ejemplo, github.com/David-OConnor/pyflow y github.com/pdm-project/pdm
__pypackages__ /

# cosas de apio
celerybeat-horario
celerybeat.pid

# SageMath analiza archivos
* .sage.py

# Ambientes
.env
.venv
env /
venv /
ENV /
env.bak /
venv.bak /

# Configuración del proyecto Spyder
proyecto .spyder
.proyecto espía

# Configuración del proyecto de cuerda
.ropeproject

# documentación mkdocs
/ sitio

# mipy
.mypy_cache /
.dmypy.json
dmypy.json

# Comprobador de tipo Pyre
.pira /

# analizador de tipo estático pytype
.pytype /

# Símbolos de depuración de Cython
cython_debug /

#PyCharm _
#   La plantilla específica de JetBrains se mantiene en un JetBrains.gitignore separado que puede
#   se encuentra en https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#   y se puede agregar al gitignore global o fusionarse en este archivo. Por una más nuclear
#   opción (no recomendada) puede descomentar lo siguiente para ignorar toda la carpeta de ideas.
# .idea/